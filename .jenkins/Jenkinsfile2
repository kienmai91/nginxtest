


node {
  checkout scm
  stage('Package') {
      sh 'echo $PATH'
   
  }

  stage('Create Docker Image') {
   app =  docker.build("kienmai91/kienrepo:${env.BUILD_NUMBER}")
   
  }

  stage ('Run Application') {
    try {

      docker.image("kienmai91/kienrepo:${env.BUILD_NUMBER}").inside {

      sh "echo ${env.BUILD_NUMBER}"

}




    } catch (error) {
    } finally {
      // Stop and remove database container here
      //sh 'docker-compose stop db'
      echo 'build done'
    }
  }


  stage('push new image to docker hub') {
  docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
      app.push("latest")
	}

    }
   stage('Run Application') { 
 docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
    sh("docker rm -f nginx ||:")
    agent { docker 'kienmai91/kienrepo:latest' }
  }
}
  stage('Trigger test') {
  try {
     b = build(job: 'project2', propagate: true).result
     if(b == 'FAILURE'){
     echo "Build failed"

      }
           }
  catch(error) {
      echo "$error"
      currentBuild.result = "FAILURE"  }



}
}   





